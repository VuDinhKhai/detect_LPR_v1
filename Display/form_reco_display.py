# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form_reco1.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import mysql.connector

db = mysql.connector.connect(user='vehicle-identification', password='aipt2023',
                             host='192.168.1.89', database='vehicle-identification')
app = QtWidgets.QApplication(sys.argv)
MainWindow = QtWidgets.QMainWindow()
ui = ''


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        global ui
        self.db = mysql.connector.connect(user='vehicle-identification', password='aipt2023',
                             host='192.168.1.89', database='vehicle-identification')
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(428, 435)
        MainWindow.setMaximumSize(QtCore.QSize(428, 16777215))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.comboBox_list_link = QtWidgets.QComboBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.comboBox_list_link.setFont(font)
        self.comboBox_list_link.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_list_link.setObjectName("comboBox_list_link")
        self.verticalLayout.addWidget(self.comboBox_list_link)
        self.comboBox_list_link.currentIndexChanged.connect(self.select_combobox_RTSP)

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ND_bienso = QtWidgets.QCheckBox(self.centralwidget)
        self.ND_bienso.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.ND_bienso.setFont(font)
        self.ND_bienso.setIconSize(QtCore.QSize(30, 30))
        self.ND_bienso.setAutoRepeatDelay(305)
        self.ND_bienso.setTristate(False)
        self.ND_bienso.setObjectName("ND_bienso")
        self.horizontalLayout_2.addWidget(self.ND_bienso, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.ND_loaixe = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.ND_loaixe.setFont(font)
        self.ND_loaixe.setObjectName("ND_loaixe")
        self.horizontalLayout_3.addWidget(self.ND_loaixe, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.ND_mausac = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.ND_mausac.setFont(font)
        self.ND_mausac.setObjectName("ND_mausac")
        self.horizontalLayout_4.addWidget(self.ND_mausac, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.ND_soluongxe = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.ND_soluongxe.setFont(font)
        self.ND_soluongxe.setObjectName("ND_soluongxe")
        self.horizontalLayout_5.addWidget(self.ND_soluongxe, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Button_luu = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Button_luu.setFont(font)
        self.Button_luu.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.Button_luu.setObjectName("Button_luu")
        self.horizontalLayout.addWidget(self.Button_luu)
        self.Button_luu.clicked.connect(self.luu_RTSP)

        self.Button_thoat = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.Button_thoat.setFont(font)
        self.Button_thoat.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.Button_thoat.setObjectName("Button_thoat")
        self.horizontalLayout.addWidget(self.Button_thoat)
        self.Button_thoat.clicked.connect(self.button_thoat)

        self.verticalLayout.addLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.load_data_to_combobox_list_link()
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Recognize"))
        self.label.setText(_translate("MainWindow", "Chọn chế độ nhận diện video"))
        self.comboBox_list_link.setItemText(0, _translate("MainWindow", "Đường dẫn video/camera"))
        self.ND_bienso.setText(_translate("MainWindow", "    Nhận diện biển số"))
        self.ND_loaixe.setText(_translate("MainWindow", "    Nhận diện loại xe"))
        self.ND_mausac.setText(_translate("MainWindow", "    Nhận diện màu sắc"))
        self.ND_soluongxe.setText(_translate("MainWindow", "    Nhận diện số lượng xe"))
        self.Button_luu.setText(_translate("MainWindow", "Lưu"))
        self.Button_thoat.setText(_translate("MainWindow", "Thoát"))
    def load_data_to_combobox_list_link(self):
        self.db = mysql.connector.connect(user='vehicle-identification', password='aipt2023',
                             host='192.168.1.89', database='vehicle-identification')
        cursor = self.db.cursor()
        cursor.execute("SELECT rtsp FROM cameras")
        results = cursor.fetchall()
        
        # Xóa dữ liệu cũ từ QComboBox
        # self.comboBox_listxe.clear()

        # Thêm dữ liệu từ cơ sở dữ liệu vào QComboBox
        for result in results:
            self.comboBox_list_link.addItem(result[0])
    def button_thoat(self):
        # self.saveDataToFile()
        global ui
        ui = main_Window.main()
        MainWindow.close()
    def select_combobox_RTSP(self):
        selected_item = self.comboBox_list_link.currentText()
        print("selected item: ", selected_item)
    def luu_RTSP(self):
        is_checked_bienso = self.ND_bienso.isChecked()
        is_checked_nhanxe = self.ND_loaixe.isChecked()
        is_checked_mauxe = self.ND_mausac.isChecked()
        is_checked_soluongxe = self.ND_soluongxe.isChecked()
        if is_checked_bienso:
             print("bien so is checked")
        else:
             print("bien so is unchecked")
        if is_checked_nhanxe:
            print("Nhan xe is checked")
        else:
            print("Nhan xe is unchecked")
        if is_checked_mauxe:
            print("Mau xe is checked")
        else:
            print("Mau xe is unchecked")
        if is_checked_soluongxe:
            print("Soluong xe is checked")
        else:
            print("Soluong xe is unchecked")
    
def main():
    global ui
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
if __name__ == "__main__":
    main()
    sys.exit(app.exec_())

